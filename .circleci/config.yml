version: '2.1'
orbs:
  node: circleci/node@4.9.0
  slack: circleci/slack@4.6.1
jobs:
  build-and-publish:
    executor:
      name: node/default
      tag: '16.13.0'
    steps:
      - run:
          name: Temporarily whitelist remote docker machine IP address on Vultr
          command: |
            PUBLIC_IP_ADDRESS=$(curl -s http://checkip.amazonaws.com)
            curl -s "https://api.vultr.com/v2/firewalls/$VULTR_FIREWALL_GROUP_ID/rules" \
              -X POST \
              -H "Authorization: Bearer $VULTR_API_KEY" \
              -H "Content-Type: application/json" \
              --data '{
                "ip_type" : "v4",
                "protocol" : "tcp",
                "port" : "'"$NPM_REGISTRY_PORT"'",
                "subnet" : "'"$PUBLIC_IP_ADDRESS"'",
                "subnet_size" : 32,
                "source" : "",
                "notes" : "CircleCI deployment"
              }' | jq '.firewall_rule.id' >> /tmp/firewall_id.txt
              cat /tmp/firewall_id.txt
      - checkout
      - node/install-packages
      - run:
          name: Create .npmrc to use private npm registry
          command: echo $NPMRC > ~/.npmrc
      - run:
          name: Build npm package
          command: npm run build
      - run:
          name: Publish package to private npm registry
          command: npm publish --registry http://$NPM_REGISTRY
      - run:
          name: Undo whitelist process
          when: always
          command: |
            FIREWALL_ID=`cat /tmp/firewall_id.txt`
            cat /tmp/firewall_id.txt
            curl "https://api.vultr.com/v2/firewalls/$VULTR_FIREWALL_GROUP_ID/rules/$FIREWALL_ID" \
              -X DELETE \
              -H "Authorization: Bearer $VULTR_API_KEY"
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
workflows:
  version: 2
  commit:
    jobs:
      - node/test
      - build-and-publish:
          context:
            - vultr-firewall
            - registries
            - slack-notifier
          filters:
            branches:
              only:
                - master
